CREATE TABLE users ( 
	user_id SERIAL PRIMARY KEY,
	username VARCHAR(100) UNIQUE NOT NULL, 
	first_name VARCHAR(100) NOT NULL, 
	last_name VARCHAR(100) NOT NULL, 
	email VARCHAR(100) NOT NULL, 
	joined TIMESTAMPTZ NOT NULL,
);
CREATE TABLE users (user_id SERIAL PRIMARY KEY, username VARCHAR(100) UNIQUE NOT NULL, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, email VARCHAR(100) NOT NULL, joined TIMESTAMPTZ NOT NULL);



CREATE TABLE login (
	user_id INTEGER REFERENCES users ON DELETE CASCADE;
	username VARCHAR(100) UNIQUE REFERENCES users (username), 
	hash CHAR(60) NOT NULL, 
	email VARCHAR(100) NOT NULL,
	PRIMARY KEY (user_id)
);
CREATE TABLE login (user_id INTEGER REFERENCES users ON DELETE CASCADE, username VARCHAR(100) UNIQUE REFERENCES users (username), hash CHAR(60) NOT NULL, email VARCHAR(100) NOT NULL, PRIMARY KEY (user_id));



CREATE TABLE decks (
	deck_id BIGSERIAL PRIMARY KEY,
	user_id INTEGER REFERENCES users ON DELETE CASCADE,
	deck_name VARCHAR(100) NOT NULL,
	description TEXT,
	deck_created TIMESTAMPTZ NOT NULL
);
CREATE TABLE decks (deck_id BIGSERIAL PRIMARY KEY, user_id INTEGER REFERENCES users ON DELETE CASCADE, deck_name VARCHAR(100) NOT NULL, description TEXT, deck_created TIMESTAMPTZ NOT NULL);



CREATE TABLE cards (
	card_id BIGSERIAL PRIMARY KEY,
	deck_id BIGINT REFERENCES decks ON DELETE CASCADE,
	user_id INTEGER REFERENCES users ON DELETE CASCADE,
	term VARCHAR(255),
	definition VARCHAR(255),
	card_created TIMESTAMPTZ NOT NULL,
	score INTEGER NOT NULL DEFAULT 0
);
CREATE TABLE cards (card_id BIGSERIAL PRIMARY KEY, deck_id BIGINT REFERENCES decks ON DELETE CASCADE, user_id INTEGER REFERENCES users ON DELETE CASCADE, term VARCHAR(255), definition VARCHAR(255), card_created TIMESTAMPTZ NOT NULL, score INTEGER NOT NULL DEFAULT 0);
